<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>P3troL1er的个人博客</title>
    <link>https://peterliuzhi.top/</link>
    <description>Recent content on P3troL1er的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>&amp;copy; 2023 &lt;a href=&#34;https://github.com/PeterLiu-all&#34;&gt;Peter Liu&lt;/a&gt;
</copyright>
    <lastBuildDate>Thu, 29 Dec 2022 17:36:19 +0800</lastBuildDate><atom:link href="https://peterliuzhi.top/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hello</title>
      <link>https://peterliuzhi.top/posts/hello/</link>
      <pubDate>Thu, 29 Dec 2022 17:36:19 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/posts/hello/</guid>
      <description>本栏目用于收集各种杂项随笔</description>
    </item>
    
    <item>
      <title>【32位系统传参】BUUCTF picoctf_2018_rop chain</title>
      <link>https://peterliuzhi.top/writeup/32%E4%BD%8D%E7%B3%BB%E7%BB%9F%E4%BC%A0%E5%8F%82buuctf-picoctf_2018_rop-chain/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/writeup/32%E4%BD%8D%E7%B3%BB%E7%BB%9F%E4%BC%A0%E5%8F%82buuctf-picoctf_2018_rop-chain/</guid>
      <description>原题链接 checksec ida 解题思路很简单，先后调用win_function1、winfunction2、flag函数即可，重要的是rop链的顺序，32位系统比较杂乱</description>
    </item>
    
    <item>
      <title>【C&#43;&#43;Pwn】[ZJCTF 2019]Login</title>
      <link>https://peterliuzhi.top/writeup/c&#43;&#43;pwnzjctf-2019login/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/writeup/c&#43;&#43;pwnzjctf-2019login/</guid>
      <description>原题链接 查看程序架构 ida伪代码 典型的C++语法，这里应该有两个类，Admin继承自User： 其中我们发现Admin::shell正是我们需要的后门函</description>
    </item>
    
    <item>
      <title>【call32】【栈迁移】BUUCTF ciscn_2019_s_4</title>
      <link>https://peterliuzhi.top/writeup/call32%E6%A0%88%E8%BF%81%E7%A7%BBbuuctf-ciscn_2019_s_4/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/writeup/call32%E6%A0%88%E8%BF%81%E7%A7%BBbuuctf-ciscn_2019_s_4/</guid>
      <description>原题链接 查看程序架构 ida伪代码 限制溢出的字符到ret只能有一个地址，没有后门函数，典型栈迁移 exp # 自动生成头部 from pwn import * from pwn import p64, p32, u32, u64, p8 from LibcSearcher import LibcSearcher import ctypes pss: bool</description>
    </item>
    
    <item>
      <title>【C内嵌汇编】others_shellcode</title>
      <link>https://peterliuzhi.top/writeup/c%E5%86%85%E5%B5%8C%E6%B1%87%E7%BC%96others_shellcode/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/writeup/c%E5%86%85%E5%B5%8C%E6%B1%87%E7%BC%96others_shellcode/</guid>
      <description>【Write-up】BUUCTF others_shellcode 原题链接 【Write-up】BUUCTF others_shellcode checksec 查看程序架构 ida 查看程序伪代码 构建 exp checksec 查看程序架构 $ checksec --file shell_asm [*] &amp;#39;/home/peterl/security/workspace/shell_asm/shell_asm&amp;#39; Arch: i386-32-little RELRO: Partial RELRO Stack:</description>
    </item>
    
    <item>
      <title>【fmtstr_payload函数】BUUCTF axb_2019_fmt32</title>
      <link>https://peterliuzhi.top/writeup/fmtstr_payload%E5%87%BD%E6%95%B0buuctf-axb_2019_fmt32/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/writeup/fmtstr_payload%E5%87%BD%E6%95%B0buuctf-axb_2019_fmt32/</guid>
      <description>查看程序架构 ida伪代码 典型的格式化字符串漏洞，我们gdb到printf(format);那里看下栈： 可以看到格式化字符串在栈上储存要先吞掉一个字符才</description>
    </item>
    
    <item>
      <title>【HarekazeCTF2019】baby_rop</title>
      <link>https://peterliuzhi.top/writeup/harekazectf2019baby_rop/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/writeup/harekazectf2019baby_rop/</guid>
      <description>【Write-up】BUUCTF 【HarekazeCTF2019】baby_rop 原题链接 【Write-up】BUUCTF 【HarekazeCTF20</description>
    </item>
    
    <item>
      <title>【LibSearcher】ciscn_2019_en_2</title>
      <link>https://peterliuzhi.top/writeup/libsearcherciscn_2019_en_2/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/writeup/libsearcherciscn_2019_en_2/</guid>
      <description>【Write-up】BUUCTF ciscn_2019_en_2 原题链接和这道题是一道题，一模一样的 【Write-up】BUUCTF ciscn_2019_en_2 checksec 查看程序架构 ida 查看程序伪代码 构建 exp 完整 exp checksec 查</description>
    </item>
    
    <item>
      <title>【printf不刷新缓冲区】not_the_same_3dsctf_2016</title>
      <link>https://peterliuzhi.top/writeup/printf%E4%B8%8D%E5%88%B7%E6%96%B0%E7%BC%93%E5%86%B2%E5%8C%BAnot_the_same_3dsctf_2016/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/writeup/printf%E4%B8%8D%E5%88%B7%E6%96%B0%E7%BC%93%E5%86%B2%E5%8C%BAnot_the_same_3dsctf_2016/</guid>
      <description>&amp;ldquo;【Write-up】BUUCTF not_the_same_3dsctf_2016 原题链接 &amp;quot;【Write-up】BUUCTF not_the_same_3dsctf_2016 checksec查看程序架构 ida查看程序伪代码</description>
    </item>
    
    <item>
      <title>【shell重定向】BUUCTF wustctf2020_closed</title>
      <link>https://peterliuzhi.top/writeup/shell%E9%87%8D%E5%AE%9A%E5%90%91buuctf-wustctf2020_closed/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/writeup/shell%E9%87%8D%E5%AE%9A%E5%90%91buuctf-wustctf2020_closed/</guid>
      <description>原题链接 直接给了shell，但是把输出流关了 这时候我们可以用shell重定向输出流到输入流： exec 1&amp;gt;&amp;amp;0 cat flag</description>
    </item>
    
    <item>
      <title>【syscall】get_started_3dsctf_2016</title>
      <link>https://peterliuzhi.top/writeup/syscallget_started_3dsctf_2016/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/writeup/syscallget_started_3dsctf_2016/</guid>
      <description>【syscall】【Write-up】BUUCTF Get_started_3dsctf_2016 原题链接 在做题前，我先为其建立了一个专门的工作目录： 【syscall】【Write-up】BUUC</description>
    </item>
    
    <item>
      <title>【unlink】BUUCTF hitcontraining_unlink</title>
      <link>https://peterliuzhi.top/writeup/unlinkbuuctf-hitcontraining_unlink/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/writeup/unlinkbuuctf-hitcontraining_unlink/</guid>
      <description>原题链接 checksec查看程序架构 ida查看伪代码 典型的堆菜单题 介绍一下unlink unlink其实就是很普通，很常规的一种从双向链表中取出节点的机</description>
    </item>
    
    <item>
      <title>【爆破栈末位】xman_2019_format</title>
      <link>https://peterliuzhi.top/writeup/%E7%88%86%E7%A0%B4%E6%A0%88%E6%9C%AB%E4%BD%8Dxman_2019_format/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/writeup/%E7%88%86%E7%A0%B4%E6%A0%88%E6%9C%AB%E4%BD%8Dxman_2019_format/</guid>
      <description>原题链接 checksec查看程序架构 ida查看程序伪代码 构建exp ASLR对栈的影响 构建地址链 爆破 完整exp checksec查看程序架构 $ checksec xman_2019_format [*] &amp;#39;/home/giantbranch/share_files/security/workspace/xman_2019_format/xman_2019_format&amp;#39; Arch: i386-32-little</description>
    </item>
    
    <item>
      <title>【符号位漏洞&#43;ret2libc】pwn2_sctf_2016</title>
      <link>https://peterliuzhi.top/writeup/%E7%AC%A6%E5%8F%B7%E4%BD%8D%E6%BC%8F%E6%B4%9E&#43;ret2libcpwn2_sctf_2016/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/writeup/%E7%AC%A6%E5%8F%B7%E4%BD%8D%E6%BC%8F%E6%B4%9E&#43;ret2libcpwn2_sctf_2016/</guid>
      <description>原题链接 checksec查看程序架构 ida查看程序伪代码 构建exp 符号位溢出 ret2libc 完整exp checksec查看程序架构 $ checksec --file ./pwn2_sctf_2016 [*] &amp;#39;/home/peterl/security/workspace/pwn2_sctf_2016/pwn2_sctf_2016&amp;#39; Arch: i386-32-little RELRO: Partial RELRO Stack: No canary found NX: NX</description>
    </item>
    
    <item>
      <title>【格式化字符串漏洞】jarvisoj_fmm</title>
      <link>https://peterliuzhi.top/writeup/%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9Ejarvisoj_fm/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/writeup/%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9Ejarvisoj_fm/</guid>
      <description>原题链接 checksec查看程序架构 ida查看程序伪代码 构建exp 格式化字符串覆盖任意地址数据 完整exp checksec查看程序架构 $ checksec fm [*] &amp;#39;/home/peterl/security/workspace/fm/fm&amp;#39; Arch: i386-32-little RELRO: Partial</description>
    </item>
    
    <item>
      <title>【基础SROP】【sig_return】ciscn_s_3</title>
      <link>https://peterliuzhi.top/writeup/%E5%9F%BA%E7%A1%80sropsig_returnciscn_s_3/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/writeup/%E5%9F%BA%E7%A1%80sropsig_returnciscn_s_3/</guid>
      <description>原题链接 checksec查看程序架构 ida查看程序伪代码 构建exp 完整exp checksec查看程序架构 $ checksec --file ciscn_s_3 [*] &amp;#39;/home/peterl/security/workspace/ciscn_s_3/ciscn_s_3&amp;#39; Arch: amd64-64-little RELRO: Partial RELRO Stack: No canary found NX: NX enabled PIE: No PIE (0x400000) i</description>
    </item>
    
    <item>
      <title>【利用int 80h】【利用mprotect函数】BUUCTF cmcc_simplerop</title>
      <link>https://peterliuzhi.top/writeup/%E5%88%A9%E7%94%A8int-80h%E5%88%A9%E7%94%A8mprotect%E5%87%BD%E6%95%B0buuctf-cmcc_simplerop/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/writeup/%E5%88%A9%E7%94%A8int-80h%E5%88%A9%E7%94%A8mprotect%E5%87%BD%E6%95%B0buuctf-cmcc_simplerop/</guid>
      <description>题目链接 查看程序架构 不是动态链接程序 ida查看伪代码 解法一 该题没有system也没有/bin/sh，也不能ret2libc，也没有syscall，但是</description>
    </item>
    
    <item>
      <title>【绕过堆溢出限制】BUUCTF babyfengshui_33c3_2016</title>
      <link>https://peterliuzhi.top/writeup/%E7%BB%95%E8%BF%87%E5%A0%86%E6%BA%A2%E5%87%BA%E9%99%90%E5%88%B6buuctf-babyfengshui_33c3_2016/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/writeup/%E7%BB%95%E8%BF%87%E5%A0%86%E6%BA%A2%E5%87%BA%E9%99%90%E5%88%B6buuctf-babyfengshui_33c3_2016/</guid>
      <description>原题链接 查看程序架构 ida伪代码 可以看到是标准的菜单堆题 allocate 这里自定义了结构体 在ends处按d新建域，光标在具体的域上按d会清空 这个函数就是一个结构体申</description>
    </item>
    
    <item>
      <title>【生成ORW shellcode】BUUCTF pwnable_orw</title>
      <link>https://peterliuzhi.top/writeup/%E7%94%9F%E6%88%90orw-shellcodebuuctf-pwnable_orw/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/writeup/%E7%94%9F%E6%88%90orw-shellcodebuuctf-pwnable_orw/</guid>
      <description>原题链接 exp # 自动生成头部 from pwn import * from pwn import p64, p32, u32, u64, p8 from LibcSearcher import LibcSearcher import ctypes pss: bool = True fn: str = &amp;#34;./orw&amp;#34; libc_name:str = &amp;#34;&amp;#34; port: str = &amp;#34;26851&amp;#34; if_32: bool = True if_debug:bool = False pg = p32 if if_32 else p64 ug = u32 if if_32 else u64 context(log_level=&amp;#34;debug&amp;#34;, arch=&amp;#34;i386&amp;#34; if if_32 else &amp;#34;amd64&amp;#34;, os=&amp;#34;linux&amp;#34;) context.terminal =</description>
    </item>
    
    <item>
      <title>【首道堆题】【fastbin attack】【unsorted bin main_arena leak】babyheap_0ctf_2017</title>
      <link>https://peterliuzhi.top/writeup/%E9%A6%96%E9%81%93%E5%A0%86%E9%A2%98fastbin-attackunsorted-bin-main_arena-leakbabyheap_0ctf_2017/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/writeup/%E9%A6%96%E9%81%93%E5%A0%86%E9%A2%98fastbin-attackunsorted-bin-main_arena-leakbabyheap_0ctf_2017/</guid>
      <description>原题链接 这一题是作者的第一道堆题，给作者的第一感受就是神乎其神，在参考了网络上的一些 WP 后写下自己的 WP，如有错误烦请斧正 参考文章 checksec 查看程序架构 ida 查看程</description>
    </item>
    
    <item>
      <title>【栈迁移例题解析】ciscn_2019_es_2</title>
      <link>https://peterliuzhi.top/writeup/%E6%A0%88%E8%BF%81%E7%A7%BB%E4%BE%8B%E9%A2%98%E8%A7%A3%E6%9E%90ciscn_2019_es_2/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/writeup/%E6%A0%88%E8%BF%81%E7%A7%BB%E4%BE%8B%E9%A2%98%E8%A7%A3%E6%9E%90ciscn_2019_es_2/</guid>
      <description>【栈迁移例题解析】【Write-up】BUUCTF ciscn_2019_es_2 原题链接 【栈迁移例题解析】【Write-up】BUUCTF ciscn_2019_es_2 checksec查看程序架构 ida查看</description>
    </item>
    
    <item>
      <title>BUUCTF ciscn_2019_ne_5</title>
      <link>https://peterliuzhi.top/writeup/ciscn_2019_ne_5/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/writeup/ciscn_2019_ne_5/</guid>
      <description>【Write-up】BUUCTF ciscn_2019_ne_5 原题链接 【Write-up】BUUCTF ciscn_2019_ne_5 checksec查看程序架构 ida查看程序伪代码 构建exp checksec</description>
    </item>
    
    <item>
      <title>BUUCTF Jarvisoj_level2_x64</title>
      <link>https://peterliuzhi.top/writeup/jarvisoj_level2_x64/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/writeup/jarvisoj_level2_x64/</guid>
      <description>【Write-up】BUUCTF Jarvisoj_level2_x64 原题链接 【Write-up】BUUCTF Jarvisoj_level2_x64 checksec 查看架构 ida 查看伪代码 构建 exp 完整 exp checksec 查看架构 $ checksec --file level2_x64 [*] &amp;#39;/home/peterl/security/workspace/level2_x64/level2_x64&amp;#39; Arch: amd64-64-little RELRO: No RELRO Stack: No canary found</description>
    </item>
    
    <item>
      <title>归档</title>
      <link>https://peterliuzhi.top/archive/%E6%97%A5%E5%BF%97/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/archive/%E6%97%A5%E5%BF%97/</guid>
      <description></description>
    </item>
    
    <item>
      <title>暨南大学2022新生赛初赛 非官方WriteUp</title>
      <link>https://peterliuzhi.top/writeup/%E6%9A%A8%E5%8D%97%E5%A4%A7%E5%AD%A62022%E6%96%B0%E7%94%9F%E8%B5%9B%E5%88%9D%E8%B5%9B-%E9%9D%9E%E5%AE%98%E6%96%B9writeup/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/writeup/%E6%9A%A8%E5%8D%97%E5%A4%A7%E5%AD%A62022%E6%96%B0%E7%94%9F%E8%B5%9B%E5%88%9D%E8%B5%9B-%E9%9D%9E%E5%AE%98%E6%96%B9writeup/</guid>
      <description>原题链接 EasyEasyEasy 因为读入的是一个有符号数，所以当输入-1 的时候也是合法的 而我们知道，-1%256 也是-1，而v5[-1]意为*(v5-1)，指向 v5 前面一个数</description>
    </item>
    
    <item>
      <title>使用ROPgadget、ropper工具构建ropchain</title>
      <link>https://peterliuzhi.top/tricks/%E4%BD%BF%E7%94%A8ropgadgetropper%E5%B7%A5%E5%85%B7%E6%9E%84%E5%BB%BAropchain/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/tricks/%E4%BD%BF%E7%94%A8ropgadgetropper%E5%B7%A5%E5%85%B7%E6%9E%84%E5%BB%BAropchain/</guid>
      <description>查看程序架构 ida伪代码 exp 这题手工构造ropchain比较困难，但是我们可以利用ropper或者ROPgadget的ropchain功能来生成： ropper ROPgadget exp</description>
    </item>
    
    <item>
      <title>统计</title>
      <link>https://peterliuzhi.top/stats/stats/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/stats/stats/</guid>
      <description></description>
    </item>
    
    <item>
      <title>统计</title>
      <link>https://peterliuzhi.top/%E7%BB%9F%E8%AE%A1/</link>
      <pubDate>Thu, 29 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/%E7%BB%9F%E8%AE%A1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>如何查看当前系统libc版本</title>
      <link>https://peterliuzhi.top/tricks/%E5%A6%82%E4%BD%95%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8D%E7%B3%BB%E7%BB%9Flibc%E7%89%88%E6%9C%AC/</link>
      <pubDate>Wed, 28 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/tricks/%E5%A6%82%E4%BD%95%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8D%E7%B3%BB%E7%BB%9Flibc%E7%89%88%E6%9C%AC/</guid>
      <description>如何查看当前系统libc版本 如何查看当前系统libc版本 查看当前系统的libc版本 查看程序当前默认使用的libc版本 查看当前系统的libc版本 strings /lib/x86_64-linux-gnu/libc.so.6 | grep</description>
    </item>
    
    <item>
      <title>绕过atoi前对首字符是否为负号的检查</title>
      <link>https://peterliuzhi.top/tricks/%E7%BB%95%E8%BF%87atoi%E5%89%8D%E5%AF%B9%E9%A6%96%E5%AD%97%E7%AC%A6%E6%98%AF%E5%90%A6%E4%B8%BA%E8%B4%9F%E5%8F%B7%E7%9A%84%E6%A3%80%E6%9F%A5/</link>
      <pubDate>Tue, 27 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/tricks/%E7%BB%95%E8%BF%87atoi%E5%89%8D%E5%AF%B9%E9%A6%96%E5%AD%97%E7%AC%A6%E6%98%AF%E5%90%A6%E4%B8%BA%E8%B4%9F%E5%8F%B7%E7%9A%84%E6%A3%80%E6%9F%A5/</guid>
      <description>先输入空格就好了，atoi会跳过空格</description>
    </item>
    
    <item>
      <title>绕过pyjail——一句话RCE</title>
      <link>https://peterliuzhi.top/tricks/%E7%BB%95%E8%BF%87pyjail%E4%B8%80%E5%8F%A5%E8%AF%9Drce/</link>
      <pubDate>Fri, 23 Dec 2022 03:01:44 +0800</pubDate>
      
      <guid>https://peterliuzhi.top/tricks/%E7%BB%95%E8%BF%87pyjail%E4%B8%80%E5%8F%A5%E8%AF%9Drce/</guid>
      <description>基础版 __import__(&amp;#39;os&amp;#39;).system(&amp;#39;sh&amp;#39;) 进阶版 getattr(getattr(getattr(getattr(().__class__,chr(95)+chr(95)+chr(98)+chr(97)+chr(115)+chr(101)+chr(95)+chr(95)),chr(95)+chr(95)+chr(115)+chr(117)+chr(98)+chr(99)+chr(108)+chr(97)+chr(115)+chr(115)+chr(101)+chr(115)+chr(95)+chr(95))()[-4],chr(95)+chr(95)+chr(105)+chr(110)+chr(105)+chr(116)+chr(95)+chr(95)),chr(95)+chr(95)+chr(103)+chr(108)+chr(111)+chr(98)+chr(97)+chr(108)+chr(115)+chr(95)+chr(95))[chr(115)+chr(121)+chr(115)+chr(116)+chr(101)+chr(109)](chr(115)+chr(104)) 如果知道flag文件的名字，可以用: open(chr(102)+chr(108)+chr(97)+chr(103)).read() 更多资料参见https://zhuanlan.zhihu.com/p/578986988</description>
    </item>
    
    <item>
      <title></title>
      <link>https://peterliuzhi.top/image/drawing-2022-10-27-16.58.09.excalidraw/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://peterliuzhi.top/image/drawing-2022-10-27-16.58.09.excalidraw/</guid>
      <description>==⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠==
%%
Drawing {&amp;#34;type&amp;#34;:&amp;#34;excalidraw&amp;#34;,&amp;#34;version&amp;#34;:2,&amp;#34;source&amp;#34;:&amp;#34;https://excalidraw.com&amp;#34;,&amp;#34;elements&amp;#34;:[],&amp;#34;appState&amp;#34;:{&amp;#34;gridSize&amp;#34;:null,&amp;#34;viewBackgroundColor&amp;#34;:&amp;#34;#ffffff&amp;#34;}} %%</description>
    </item>
    
    <item>
      <title>包含关键词 的文章</title>
      <link>https://peterliuzhi.top/search.html/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://peterliuzhi.top/search.html/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
